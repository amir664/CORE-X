;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit ALU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in_a : SInt<32>, flip in_b : SInt<32>, flip Aluop : UInt<4>, Result : SInt<32>}
    
    node _T = eq(io.Aluop, UInt<1>("h00")) @[ALU.scala 12:20]
    when _T : @[ALU.scala 12:28]
      node _io_Result_T = add(io.in_a, io.in_b) @[ALU.scala 13:30]
      node _io_Result_T_1 = tail(_io_Result_T, 1) @[ALU.scala 13:30]
      node _io_Result_T_2 = asSInt(_io_Result_T_1) @[ALU.scala 13:30]
      io.Result <= _io_Result_T_2 @[ALU.scala 13:19]
      skip @[ALU.scala 12:28]
    else : @[ALU.scala 15:33]
      node _T_1 = eq(io.Aluop, UInt<1>("h01")) @[ALU.scala 15:25]
      when _T_1 : @[ALU.scala 15:33]
        node _io_Result_T_3 = bits(io.in_b, 4, 0) @[ALU.scala 16:40]
        node _io_Result_T_4 = dshl(io.in_a, _io_Result_T_3) @[ALU.scala 16:30]
        io.Result <= _io_Result_T_4 @[ALU.scala 16:19]
        skip @[ALU.scala 15:33]
      else : @[ALU.scala 17:33]
        node _T_2 = eq(io.Aluop, UInt<2>("h02")) @[ALU.scala 17:25]
        when _T_2 : @[ALU.scala 17:33]
          node _io_Result_T_5 = lt(io.in_a, io.in_b) @[ALU.scala 18:40]
          node _io_Result_T_6 = asSInt(_io_Result_T_5) @[ALU.scala 18:51]
          node _io_Result_T_7 = mul(asSInt(UInt<1>("h01")), _io_Result_T_6) @[ALU.scala 18:28]
          io.Result <= _io_Result_T_7 @[ALU.scala 18:19]
          skip @[ALU.scala 17:33]
        else : @[ALU.scala 19:33]
          node _T_3 = eq(io.Aluop, UInt<3>("h05")) @[ALU.scala 19:25]
          when _T_3 : @[ALU.scala 19:33]
            node _io_Result_T_8 = xor(io.in_a, io.in_b) @[ALU.scala 20:30]
            node _io_Result_T_9 = asSInt(_io_Result_T_8) @[ALU.scala 20:30]
            io.Result <= _io_Result_T_9 @[ALU.scala 20:19]
            skip @[ALU.scala 19:33]
          else : @[ALU.scala 21:33]
            node _T_4 = eq(io.Aluop, UInt<3>("h06")) @[ALU.scala 21:25]
            when _T_4 : @[ALU.scala 21:33]
              node _io_Result_T_10 = add(io.in_a, io.in_b) @[ALU.scala 22:30]
              node _io_Result_T_11 = tail(_io_Result_T_10, 1) @[ALU.scala 22:30]
              node _io_Result_T_12 = asSInt(_io_Result_T_11) @[ALU.scala 22:30]
              io.Result <= _io_Result_T_12 @[ALU.scala 22:19]
              skip @[ALU.scala 21:33]
            else : @[ALU.scala 23:33]
              node _T_5 = eq(io.Aluop, UInt<3>("h07")) @[ALU.scala 23:25]
              when _T_5 : @[ALU.scala 23:33]
                node _io_Result_T_13 = add(io.in_a, io.in_b) @[ALU.scala 24:30]
                node _io_Result_T_14 = tail(_io_Result_T_13, 1) @[ALU.scala 24:30]
                node _io_Result_T_15 = asSInt(_io_Result_T_14) @[ALU.scala 24:30]
                io.Result <= _io_Result_T_15 @[ALU.scala 24:19]
                skip @[ALU.scala 23:33]
              else : @[ALU.scala 26:33]
                node _T_6 = eq(io.Aluop, UInt<4>("h08")) @[ALU.scala 26:25]
                when _T_6 : @[ALU.scala 26:33]
                  node _io_Result_T_16 = sub(io.in_a, io.in_b) @[ALU.scala 27:30]
                  node _io_Result_T_17 = tail(_io_Result_T_16, 1) @[ALU.scala 27:30]
                  node _io_Result_T_18 = asSInt(_io_Result_T_17) @[ALU.scala 27:30]
                  io.Result <= _io_Result_T_18 @[ALU.scala 27:19]
                  skip @[ALU.scala 26:33]
                else : @[ALU.scala 29:33]
                  node _T_7 = eq(io.Aluop, UInt<4>("h09")) @[ALU.scala 29:25]
                  when _T_7 : @[ALU.scala 29:33]
                    node _io_Result_T_19 = lt(io.in_a, io.in_b) @[ALU.scala 30:40]
                    node _io_Result_T_20 = asSInt(_io_Result_T_19) @[ALU.scala 30:51]
                    node _io_Result_T_21 = mul(asSInt(UInt<1>("h01")), _io_Result_T_20) @[ALU.scala 30:28]
                    io.Result <= _io_Result_T_21 @[ALU.scala 30:19]
                    skip @[ALU.scala 29:33]
                  else : @[ALU.scala 31:34]
                    node _T_8 = eq(io.Aluop, UInt<4>("h0a")) @[ALU.scala 31:25]
                    when _T_8 : @[ALU.scala 31:34]
                      io.Result <= io.in_a @[ALU.scala 32:19]
                      skip @[ALU.scala 31:34]
                    else : @[ALU.scala 33:34]
                      node _T_9 = eq(io.Aluop, UInt<4>("h0b")) @[ALU.scala 33:25]
                      when _T_9 : @[ALU.scala 33:34]
                        io.Result <= io.in_a @[ALU.scala 34:19]
                        skip @[ALU.scala 33:34]
                      else : @[ALU.scala 36:34]
                        node _T_10 = eq(io.Aluop, UInt<4>("h0c")) @[ALU.scala 36:25]
                        when _T_10 : @[ALU.scala 36:34]
                          node _io_Result_T_22 = bits(io.in_b, 4, 0) @[ALU.scala 37:40]
                          node _io_Result_T_23 = dshr(io.in_a, _io_Result_T_22) @[ALU.scala 37:30]
                          io.Result <= _io_Result_T_23 @[ALU.scala 37:19]
                          skip @[ALU.scala 36:34]
                        else : @[ALU.scala 38:34]
                          node _T_11 = eq(io.Aluop, UInt<4>("h0d")) @[ALU.scala 38:25]
                          when _T_11 : @[ALU.scala 38:34]
                            node _io_Result_T_24 = bits(io.in_b, 4, 0) @[ALU.scala 39:40]
                            node _io_Result_T_25 = dshr(io.in_a, _io_Result_T_24) @[ALU.scala 39:30]
                            io.Result <= _io_Result_T_25 @[ALU.scala 39:19]
                            skip @[ALU.scala 38:34]
                          else : @[ALU.scala 40:16]
                            io.Result <= asSInt(UInt<1>("h00")) @[ALU.scala 41:19]
                            skip @[ALU.scala 40:16]
    
