$date
2022-09-29T10:24+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ALU $end
 $var wire 32 ! _io_Result_T_8 $end
 $var wire 63 " _GEN_10 $end
 $var wire 32 # _GEN_2 $end
 $var wire 1 $ _T $end
 $var wire 33 % _io_Result_T_16 $end
 $var wire 32 & _io_Result_T_2 $end
 $var wire 32 ' _GEN_5 $end
 $var wire 32 ( _GEN_8 $end
 $var wire 32 ) _io_Result_T_1 $end
 $var wire 32 * _io_Result_T_18 $end
 $var wire 32 + _GEN_12 $end
 $var wire 32 , io_in_a $end
 $var wire 63 - _io_Result_T_4 $end
 $var wire 32 . _GEN_7 $end
 $var wire 2 / _io_Result_T_7 $end
 $var wire 32 0 _GEN_1 $end
 $var wire 32 1 _GEN_4 $end
 $var wire 1 2 clock $end
 $var wire 33 3 _io_Result_T $end
 $var wire 32 4 _io_Result_T_9 $end
 $var wire 5 5 _io_Result_T_3 $end
 $var wire 32 6 _io_Result_T_23 $end
 $var wire 32 7 _io_Result_T_17 $end
 $var wire 63 8 _GEN_11 $end
 $var wire 32 9 _GEN_6 $end
 $var wire 1 : _io_Result_T_6 $end
 $var wire 32 ; _GEN_0 $end
 $var wire 32 < _GEN_9 $end
 $var wire 32 = io_Result $end
 $var wire 1 > reset $end
 $var wire 32 ? _GEN_3 $end
 $var wire 4 @ io_Aluop $end
 $var wire 32 A io_in_b $end
 $var wire 1 B _io_Result_T_5 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 &
b00000000000000000000000000000000 <
b00000000000000000000000000000000 '
b000000000000000000000000000000000000000000000000000000000000000 -
b00000000000000000000000000000000 =
b00000000000000000000000000000000 (
b00000 5
b00000000000000000000000000000000 !
0>
b00000000000000000000000000000000 ?
b000000000000000000000000000000000 3
b00000000000000000000000000000000 7
b0000 @
b00000000000000000000000000000000 #
b00000000000000000000000000000000 9
0:
02
b00000000000000000000000000000000 4
b00000000000000000000000000000000 6
b00000000000000000000000000000000 .
b00 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b000000000000000000000000000000000 %
b00000000000000000000000000000000 )
b000000000000000000000000000000000000000000000000000000000000000 "
b00000000000000000000000000000000 *
b000000000000000000000000000000000000000000000000000000000000000 8
b00000000000000000000000000000000 +
b00000000000000000000000000000000 A
b00000000000000000000000000000000 ,
0$
0B
b00000000000000000000000000000000 ;
$end
#0
1$
1>
#1
12
#6
b000000000000000000000000000001011 3
1B
b000000000000000000000000000000000000000000000000000000101000000 -
b111111111111111111111111111111111 %
b00000000000000000000000000000011 4
b00000000000000000000000000001011 &
b00110 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 =
b11111111111111111111111111111111 7
b01 /
0>
b00000000000000000000000000001011 )
b00000000000000000000000000000011 !
b1100 @
b000000000000000000000000000000000000000000000000000000000000000 8
02
b11111111111111111111111111111111 *
0$
b00000000000000000000000000000000 +
1:
b00000000000000000000000000000110 A
b00000000000000000000000000000101 ,
#11
12
#16
02
#21
12
#26
02
#31
12
#36
02
#41
12
#46
02
#51
12
#56
02
#61
12
#66
02
#71
12
#76
02
#81
12
#86
02
#91
12
#96
02
#101
12
#106
02
#111
12
#116
02
#121
12
#126
02
#131
12
#136
02
#141
12
#146
02
#151
12
#156
02
#161
12
#166
02
#171
12
#176
02
#181
12
#186
02
#191
12
#196
02
#201
12
#206
b000000000000000000000000000000000 3
0B
b000000000000000000000000000000000000000000000000000000000000000 -
b000000000000000000000000000000000 %
b00000000000000000000000000000000 4
b00000000000000000000000000000000 &
b00000 5
b00000000000000000000000000000000 7
b00 /
b00000000000000000000000000000000 )
b00000000000000000000000000000000 !
b0000 @
02
b00000000000000000000000000000000 *
1$
0:
b00000000000000000000000000000000 A
b00000000000000000000000000000000 ,
#211
12
#216
02
